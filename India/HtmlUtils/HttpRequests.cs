using System;
using System.Collections.Generic;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace HtmlUtils
{
    public class HttpRequests
    {
        public HttpRequests()
        { }

        public string GetPostResponse(int acId)
        {
            var request = (HttpWebRequest)WebRequest.Create("http://dashboard.cvoterindia.com/biharqualitative/Default3.aspx");
            string patternString = "__EVENTTARGET=ctl00%24ContentPlaceHolder1%24ddlAID&__EVENTARGUMENT=&__LASTFOCUS=&__VIEWSTATE=%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%2FHglGb3JlQ29sb3IJ%2F%2F%2F%2F%&__VIEWSTATEGENERATOR=4317DF56&__EVENTVALIDATION=%2FwEdAPgBvSBq%2FBHPu8UwkrL6btc2ZoFBZYDVNXrnB%2F9WmjDFKj5qn5Wufuu4Mvvz6VbJlxZV2Fkum4hLTVTMqSdmFhjDFcxiVEuD8O1Gl1LjjVbLi12DaVKILRiY5O5t72nRMclp1n5%2F2NKcr5t83g1hmT8%2FL83gDsPJUgHD7RRlfrWPyF5uPQluwIzjvR%2FnWyTznc4RibOcQCxwsnJXPkjQK3nePxXg4oLQdLWHz2TVbS6lUDkF1VkRi%2Fq1gjO85iOlNRZXTOywYcFkBo1mjRFrsRgs6AktELQZvkgZ%2Bl8%2BErBAvsa4PF%2Ffqnm%2FE6FMcNSU13xiF5BJIWePD9hRuiCoTevCvJnzSnRJl2Y%2FFuK7%2BYLzjdnN4dJ6TvzcBAkHxrXyiRJz2XJv%2FBKWfRbIj9ZQntLUzlvsChuJ5K4h6BCTMKmHgvK2ON1dSsrZzAd2KCbV4MOuSAob7ajNkpapdPBK6qeo5TQ447SSFo1C%2B96vx3TEx%2FzWh85mdENBjrDJB6H3v6nMyiHr%2F6WEDm6BFOlNzpa0hFQY7GcItcdhGs3TF9jCEQCXgYYRuMeRVg5uFl3dhlFO9UJooiyFzcmTyqVQ3oteVm6NNKTHpwzdo38VvGZrR%2B5mHHgLmmwOGyKi6vdWib6aLyVI9qVwsHok8FsM05zjsj5Sm7F5w8baOjtTeDplQYzH3pO3whel4wPV0r9zUTraKvb2FmtdRegjm%2F%2FbOdtif%2BUnqMoHErq%2FOS7lRUhde8KmLpe1ic%2Bl5vhKpx1R6sN68ajuy%2FvrXa94NaBlXDH3boFcVqEcEtlelpWJWx9ikUbbuV%2BUdQblE6ndfKnF3Mscdf3GBUVlW5A%2FiVNS8MRu4TNSLRffjaOjFnAyQ5MtD7V5AesG7lhHS4ns8KCHEK%2FQlNFJpzj04Eeuo7MXGDW%2BcQCDAavd%2FgzkbeVoP2G2brk730d18oDGXNTB5kdIHJMLKG5AJr5SheKIJMwtLjhQCxMEvHCuP2OQoAZppZuZbtciys%2Bq6j04l8QvcjJ0ML3Oc0apryD5IvxToQ8jbcioqT09pf61WCJKaishPazIqavpHpEJ2P0Xk8m4gA1jC16WQeN3IYzuua0VmSH1%2FjzDatcFMtfG%2BhlhxCvbCbAl74kz17%2F6D21DJh5yEcWPQiKd411qb3djDFjT0YRnUl41uloFR4%2BSS1bcAD4MbKAoVaVbRRBIQ2fz6G8JIIAF%2BZLjhKn%2F7nYVepW7DjXKLHKQEukw5Bbe4a7p%2BZ8aAVo%2FFs4ATCuLgm3W%2BpF6O3rmDcSpKfkYF5NyJg6nTh1sgxGvH52Uc5l%2BSgXqo%2FtWbyP5S01oqCax1bpy9kQ6MzsKmBCQbd7MQwmREixQD9RCYDy5HfelakBC1zJ7PchlJxrTR6DOd7rLEKkbb8Kvpuhtv1TfDQUpx%2B4TX0rDQ3Hs%2B37WfgUqaMbxFtAuOjtenzFEGpq4ftaNF%2Bl5u2UXS2eXRsun3WZ2v1JQT7fR%2BQXTz43YCT5nzJBVHaE5HS%2FOwXeivngtoz7OllpuurRJq3sxD2bIvhnFX5p4M3GAWf0fc47X8hWLLm4gAqVddRuNZB6bH%2BJbX4Ie7tSS%2BHmpHOgX9NikKSLftpCbmTcOO%2BB%2F4too18K9ZV7Ar1MSxP9JtkY8nB9Wob79TLHK5lTXxxV6OSTbOujd05YHcQRdYgBHmW0qAh6nv%2BCOGmLp%2BWLon4TPxnYJxypG23vBBgx7arygpAQOVnaIA0X83dtX25lB2DCeubTDH8XyTlhoZQmSyEfGAPvjMBFi1jadbly1t9TZVbvUW5gp%2BWFM5JYl60G0DiutcXED4Ro8LiE77VJXXRnsqgnvM2%2BaiSiQgcRJhXeFmrDCrVjansssRh1ajvcJBzB%2F2HrytaihxfZrnPBZEUuY4qOPx2GPfSXpvgxAzQhOP88DH7ujxWAdhv50pmx5Bmls0MMROCbv3FGhkAMR1zoljjUXCcqCBeZTmERSlVLBUU8Wm4sGekd6GwA2sfDbuo%2Fkq4nvt76BDTl3NUXs6wN9UaG2cukY%2BNg66Vi6RZ3i69gtNOGAfr8oGedJaG744O3Z6EL6LNIw9%2FU1vS0uKTfROuD6SAd3z8I7Rh9e4CjQ142i5tE%2FnjufYuQ5DIMlZsM3QXcdTxEG7QE5lC9qBoQF94WeTCWZBzJw4JsE4BVU1YguTfUy3rkptQmxjXSy9lO1oZXyvlr0yt1Bh4Mf%2Bwhf5e4f0UqzDLfydNYxXHcDP0BecE7n2%2FuqIIH%2BZLQ09o141j5Ptw%2BEqQjjIgDOHjesiRYEl62arwV12Ur9l9sJap0J4tDSp8yvlXw%2BvdHz3JTlZVtUdiY0i9p7xCaOxtuRWGZeQaLqP47Nu7ZXa%2F878TfnJ5TQH36cFfeRjv5SAMD%2FuQlKskOvcFoBjFCOIJkCiOlzwEhCQuHh4R6a7QS4u9kZDJuyfjz3ERY7oQC%2BIQMqQbUwgIUcVjYUQdUHkpJc21n1QhXEn75udthVnOmxsYyk5ygP5ge%2BT74Ckv4vXVU9sq88EDv7SpKvQQLGA2GIKwBE5SKnQD0hs4NgFkcPFmQJYdGAiSQUERTszjTIyEI4zSN8auoMfoqbSw31lRebh8piWygRcLgYKOol2gmEp4s2zvgkuUPtYonm4DoyHzaPiubDEjMwvA6a1SEe4Ue3CcUIe8yHaKKr1se5Ele%2FRrXoSV8v9R2C8W27iaS%2FFA5FTtygncxvaRrv9iBdf9gCCDxjZ6BudN3TbAMXl6GCmKPCCD3Ohlt4ne1qBiXz%2Fp9MkHjZhM531tQ6Kpi%2BwpiGA3BiyJ%2BVbmZAVxlr000GAsX9FhXiX%2Fozt%2FWp25ZN4Ha%2FUPQsXr6aBbXJlzRbH9IKb6UZcwGUeAkg7zpg%2Bvc1mi%2BBoA9I9fjPCulaWFVn6CEQZkLp4rTDwz6ZHlTI1Ox4sQ9qRlsK1%2BGVbwKCVjon%2FlnNvAWzSzNmA3ZdMcuBk7UtA318dnFuqDLiBjyfPLP0FIjZ%2B47QsQxcepUTKp4DNpvzavNNNtQstyaSk41E%2FRY04LbdJv8JTqnJPpP22GTteQ89O13d%2B1Zhj1j77yp22oOp8L1pP2tIigWw%2B0RntDxXrX7uB%2FUvIq5RJF3LQc00jvdDPsddWUzKC3kcGcKdBdsEYSodZ35V5RdPWXWVOM9%2FxyPOfLLW4RO9pu69GilEKbnC3fORSQjEomnvYU0Xz8doIMTqAoM%2BQVENc1KdFpMWXQhI8SNMQb9X57%2FIYNquTCgLezYtUlaWbuwmn0NJpBM1yNEoS%2BACU7dlvcyaL4HLQgbfkKRdbgRLkbPXwsEUGGW3IG%2Fc3yMXqd3Qyl0G8CRqudCRENOQMt%2B%2BVETcDHRsBNTcxyxHOcuBuQ2b9MCKe3c1i5jBlZaXfJWxjMI7U0bN4jJgeP7zoWs8yKhqBwOGUcRQds9TACpCF2oKahsw0aIjahIoYvU6e0f9JoXDkzrlz8L21sEREd7xF3aDAoiHzSRIW1AcaVeaK9kTY1qto4dxfWxfqpCYFKcB5OfwoC69FzfQisA0WQF9OI6%2FLgUiII4u%2B31fKIdNNWQvmFLWQmBZLZ1EbTWxeiIdL2UU1nTWWmJcKWagc%2BNiUP6cEGJGTFqR7GBrQnazNm22MogjH3nKCgIIcUTfZp7D6J1PEbVHHuDEkF4wE9aEHfnVf6HTxQ8YEXjeVHPjnE5cYH%2BL%2FqswJYiV69idLezauuvLHp2%2FkAiZNO11gLZO4djrZ88tz365hAR3omRP0oQRy4GMtSMWmxoI8hM%2BreP9mCSyLtBekIxqlTyvEXJ%2F%2BXEui9gBYXxESvLQkhNflkXivnS11KgawSAx3cME1K6vn4QHsQvz22PF6%2F6DZ6ynn7R64ea6x2vQvNcaPaxBEzYV1aMWSp%2BEMGzyoUZn1syii16tQgfI6Nm2X1u%2Bar%2FSHHmPnbdHAo5NKRZpRcHiZJ40Myy2qqmrDuTDzcYAl%2BulN9HW4zGX0bySnT9mjOg9ScTwerSrLnhci2Q3dLlXZXZnHI6WssIOnP547d%2Fn0H6mifaodNVReQd1grfA9uy0Mp4LjJIY7su7hknQBpa1M9Vlj15ylyGHCoWJXljuYteK3OYmQAi%2B5jSA181gBwDEdMEK6oagEicLJot%2B825BWIYJEorCpuhV9ciqa8wJiFWalNe7Gh4Aksy5TbSkftiQ57timvfw1hZoQT84T7B64exhyzAnug78yheN0yqVejdS1uk1CbCYruCEVU%2B54V%2BBgoZUbp%2BNLY%2BLmjwTV2XTqyg8IV%2BzDBebty8VFnjvIRC7cG4CRDSn%2FpJ%2BK4DhT5pp3UG1hqlOkafbuFBjU2j4UcxoSjLT9GRAlQEIg5GhFBXuDeRYYs6n9qvCqHtTWLh3wHixrHp3JTSp7TFOT9YN2Z5unetaUNJ6Gtet8EUiLXz75eFBP18H792SY5F%2B1V8oSDM3dR7hj7sb62r2LOzZ%2Fs99B6BiUrv4L%2BggMqDDkAGEiL03%2Fl78ouC0hxXjhAVuI6mSiGFnjeJm4ria6YGyRwAo5mhDpEs8iBmSVoobmlYWHbF66X6W2ter%2Fjgh5yJ73JfUv6cNKJgSiGXgxbgDKXtLvalX3INeeSGXI6ZxKhvfBjLv6AhWEjisWgtpaq3pNR%2FuqgkjOTrixiqTAspVtnLOsUNn9pPP48KIUW6ofXUVrnKa3QekHZUWtgVIaA4QfzITWmsQUVDjU7p7Jj4MDYEYkOT6n3eMQCdGfgzm12vREokgD6U1Yw2zMd7wJ86DPtoVsm6MWZ4NgOh1z8o8AsIEEGXrpOSMDXQuAg8WYDTIpsizVTdDfrUjhmKKJpx3jkjP5mGtgT2T53%2FKcN5aFxn2LzShohjxq%2Fne2bSOY3H7ttj9UR900cT2LvNRY22uQxaOJG%2BpfXF9Q%2FeHTHCkFNsK6MhbO%2FfFAkRp%2BDV5nomvsUx41jHcvu8foKLwflDAnmlo4byyEyVhC8eyddQ9e%2BQbBZHAHn4Abo4zh0zjByJ1uX4Vi1uT2c0EJI31ni3OtWZEjbpxCmV55giwHL3VzrClu0jAgDM6UyvkVyJREt0vM2Pz6VG3KAtjS%2FzFK1iWqhCBUMtqKK1rht28bDH2YU7YpCDUlTt1iDuLoVsPHqwmu0UMUsJJNaK5f0RH4djMm0EyFG%2Fw4YLoKzO4gfCHn3AsZiXqJ4liJ%2FvQvPBKRvyArUehHZbSEI9X3%2Bv4kKogvCabs2%2BqL9MjXx0BYWculq4EPV2%2BYAqYU7ucJdyunnVRvcRoHCSNW9sx4s%2FtBQq7xVib0Jrumow7t%2BaOQlJ%2BrpluCTaRNacl9gAKql%2BJi%2BJvL%2BsGWE3tq9Flqq0jeIfnwkUgsIgJhg%3D%3D&ctl00%24ContentPlaceHolder1%24ddlAID={0}";
            var postData = String.Format(patternString, acId);
            var data = Encoding.ASCII.GetBytes(postData);
            request.ContentLength = data.Length;

            request.Method = "POST";
            request.Host = "dashboard.cvoterindia.com";
            request.ContentType = "application/x-www-form-urlencoded";
            request.Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
            request.UserAgent = " Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36";
            request.Headers.Add("Accept-Encoding", "gzip, deflate");
            request.Headers.Add("Accept-Language", "en-US,en;q=0.8,ms;q=0.6");
            request.Headers.Add("Cookie", "ASP.NET_SessionId=seqyrvvuardtv4tbzvx3xevj");


            // Write body data to requestStream
            Stream dataStream = request.GetRequestStream();
            dataStream.Write(data, 0, data.Length);
            dataStream.Close();
            try
            {
                // Get the response.
                WebResponse response = request.GetResponse();
                // Get the stream containing content returned by the server.
                dataStream = response.GetResponseStream();

                var responseStream = new GZipStream(dataStream, CompressionMode.Decompress);

                // Open the stream using a StreamReader for easy access.

                StreamReader reader = new StreamReader(responseStream);
                // Read the content.
                string responseFromServer = reader.ReadToEnd();

                // Display the status.
                Console.WriteLine(((HttpWebResponse)response).StatusDescription);
                return responseFromServer;
            }
            catch (TimeoutException exception)
            {
                // Display the status.
                Console.WriteLine(exception.Message);
                return null;
            }
            catch (Exception exception)
            {
                Console.WriteLine(exception.Message);
                return null;
            }
        }
    }
}
